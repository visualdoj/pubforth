name: Autobuild PubForth
on: [push, pull_request]
jobs:
  GitHub-Actions:
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest, ubuntu-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - run: echo "‚òÅÔ∏è This job is now running on a ${{ runner.os }} server hosted by GitHub!"

      - name: Check out
        uses: actions/checkout@v3
        with:
            path: pubforth

      - name: Install Free Pascal Compiler (apt-get)
        if: runner.os == 'Linux'
        run: sudo apt-get install fpc

      - name: Install Free Pascal Compiler (brew)
        if: runner.os == 'macOS'
        run: |
          brew update
          brew install fpc

      - name: Install Free Pascal Compiler (choco)
        if: false && (runner.os == 'Windows')
        run: |
          choco install freepascal
          refreshenv

      - name: Workaround for missed PATH settings (choco)
        if: false && (runner.os == 'Windows')
        run: echo "C:\\tools\\freepascal\\bin\\i386-win32" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append

      - name: Install Free Pascal Compiler (visualdoj/setup-fpc)
        if: (runner.os == 'Windows') && (steps.cache_fpc_installation_path.outputs.cache-hit != 'true')
        uses: visualdoj/setup-fpc@v0.1.11-beta

      # We need this step in case if previous step skipped due to caching
      # Caching cannot be moved to the setup-fpc action because of lack of
      # condition supporting in composite actions
      # See https://github.com/actions/runner/issues/646 for details
      - name: Update PATH
        if: (runner.os == 'Windows')
        run: echo ${{ github.workspace }}\.fpc\release_3_2_2\bin\i386-win32 | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
        shell: powershell

      - name: Print Free Pascal Version
        run: fpc -i

      - name: Generate Free Pascal Config
        if: runner.os == 'Windows'
        working-directory: ${{ github.workspace }}/pubforth
        run: fpcmkcfg -d basepath=${{ github.workspace }}\.fpc\release_3_2_2 -o ${{ github.workspace }}\.fpc\release_3_2_2\bin\i386-win32\fpc.cfg 

      - name: üî® Build PubForth
        working-directory: ${{ github.workspace }}/pubforth
        run: make build

      - name: üìã Print PubForth version
        id: pubforth_version
        working-directory: ${{ github.workspace }}/pubforth
        run: |
            bin/pubforth --version
            echo "::set-output name=version::$(bin/pubforth --short-version)"
            echo "::set-output name=package::$(bin/pubforth --short-version)"

      - name: üì¶ Make package
        working-directory: ${{ github.workspace }}
        run: |
            mkdir "${{ steps.pubforth_version.outputs.package }}"
            mkdir "${{ steps.pubforth_version.outputs.package }}/bin"
            mv pubforth/bin/pubforth* "${{ steps.pubforth_version.outputs.package }}/bin/"
            tar -cvf "${{ steps.pubforth_version.outputs.package }}.tar" "${{ steps.pubforth_version.outputs.package }}/*"

      - name: ü§ê Zip it
        uses: thedoctor0/zip-release@main
        with:
            type:      'zip'
            directory: ${{ github.workspace }}
            filename:  ${{ steps.pubforth_version.outputs.package }}.zip
            path:      ${{ steps.pubforth_version.outputs.package }}

      - name: üõ™ Upload tar
        uses: actions/upload-artifact@v3
        with:
          name: "${{ steps.pubforth_version.outputs.package }}.tar"
          path: "${{ github.workspace }}/${{ steps.pubforth_version.outputs.package }}.tar"

      - name: üõ™ Upload zip
        uses: actions/upload-artifact@v3
        with:
          name: "${{ steps.pubforth_version.outputs.package }}.zip"
          path: "${{ github.workspace }}/${{ steps.pubforth_version.outputs.package }}.zip"

      - name: üî¨ Test PubForth
        working-directory: ${{ github.workspace }}/pubforth
        run: make test
